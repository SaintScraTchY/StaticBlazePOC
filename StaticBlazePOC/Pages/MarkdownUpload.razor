@page "/markdown-upload"
@using System.Net
@using StaticBlazePOC.Models
@using StaticBlazePOC.Services
@inject GitHubService GitHubService
@inject IConfiguration Config;

<h3>Upload Markdown</h3>

<EditForm Model="@textGit" OnValidSubmit="UploadMarkdown">
    <InputText @bind-Value="@textGit.GitFilePath" placeholder="File Path (e.g., posts/test.md)" />
    <br/>
    <InputTextArea @bind-Value="@textGit.MarkdownContent" placeholder="Markdown Content" />
    <br/>
    <InputText @bind-Value="@textGit.GitRepo" placeholder="GitHub Repo" />
    <br/>
    <InputText @bind-Value="@textGit.GitAccount" placeholder="GitHub UserName" />
    <button type="submit">Upload</button>
</EditForm>

@code {

    private TextGitUploadModel textGit = new TextGitUploadModel()
    {
        GitAccount = "your-github-account",
        GitRepo = "your-github-repo",
        GitFilePath = "posts/test.md",
        GitHubPat = SecretHolder.PatToken,
        MarkdownContent = "# Hello, Markdown!"
    };

    private async Task<HttpStatusCode> UploadMarkdown()
    {
        try
        {
            
            Console.WriteLine($"Env Pat { Environment.GetEnvironmentVariable("PAT") }");
            Console.WriteLine($"Env Pat { Environment.GetEnvironmentVariable("GitHubPat") }");
            Console.WriteLine($"Appsetting Pat { Config["GitHubPat"] }");
            Console.WriteLine($"Appsetting Pat { Config.GetSection("GitHubPat") }");
            if (string.IsNullOrWhiteSpace(textGit.GitHubPat))
            {
                Console.WriteLine("Please provide a GitHub Personal Access Token (PAT)!");
                return HttpStatusCode.BadRequest;
            }
            await GitHubService.PushMarkdownFile(textGit.GitAccount, textGit.GitRepo, textGit.GitFilePath, textGit.MarkdownContent, textGit.GitHubPat);
            Console.WriteLine("Markdown uploaded successfully!");
            return HttpStatusCode.OK;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
        return HttpStatusCode.InternalServerError;
    }

}